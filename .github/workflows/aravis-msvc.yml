name: Aravis-macOS

on:
  push
env:

  # ARAVIS_VER: ${{ github.event.release.tag_name }}
  ARAVIS_VER: 0.1.0
  PKG_CONFIG_INSTALL: C:\pkg-config
  PKG_CONFIG_VERSION: 0.28-1
  NINJA_INSTALL: C:\ninja    
jobs:
  windows:
    name: Build wheel on windows
    runs-on: windows-latest
    steps:
      - name: Disable perl
        run: |
          rm -r C:\Strawberry\perl

      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Setup winget for pkg-config-lite
        uses: Cyberboss/install-winget@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pkg-config-lite
        run: winget install bloodrock.pkg-config-lite --accept-source-agreements --accept-package-agreements --location ${{env.PKG_CONFIG_INSTALL}} --version ${{env.PKG_CONFIG_VERSION}}

      - name: Confirm pkg-config
        id: pkg-config-existence
        uses: andstor/file-existence-action@v3
        with:
          files: ${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin\pkg-config.exe
          fail: true

      - name: Setup Meson
        run: |
          pip install meson

      - name: Setup Ninja
        uses: ahmedyarub/setup-ninja@master
        with:
          version: 1.11.1
          dest: ${{env.NINJA_INSTALL}}

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Set up MSVC command env
        uses: ilammy/msvc-dev-cmd@v1

      - name: Checkout Aravis
        uses: actions/checkout@v2

      - name: Check for existing cache
        id: cache_status
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-cache
      - name: Install vcpkg
        if: steps.cache_status.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg && .\bootstrap-vcpkg.bat  && cd ../

      - name: Install dependencies
        if: steps.cache_status.outputs.cache-hit != 'true'
        shell: cmd
        run: |
          ${{ github.workspace }}\vcpkg\vcpkg.exe install --x-install-root ${{ github.workspace }}\vcpkg_installed

      - name: Cache dependencies
        if: steps.cache_status.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-cache

      - name: Build Aravis
        shell: cmd
        run: |
          set PATH=${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\tools\gobject-introspection;%PATH%
          set PATH=${{env.NINJA_INSTALL}};%PATH%
          set PKG_CONFIG_PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig\;%PKG_CONFIG_PATH%
          meson setup --pkg-config-path ${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig -Ddocumentation=disabled -Dusb=enabled -Dviewer=disabled -Dgv-n-buffers=1 -Dprefix=${{ github.workspace }}\install -Dintrospection=enabled build .
          meson compile -C ./build
          meson install -C ./build

      - name: Copy windows file
        shell: powershell
        run: |
          cp  install/bin/*.dll  aravis-python/aravis/bin/
          cp  install/lib/girepository-1.0/* aravis-python/aravis/lib/
          cp  ${{ github.workspace }}/vcpkg_installed/x64-windows/bin/*.dll aravis-python/aravis/bin/
          cp  ${{ github.workspace }}/vcpkg_installed/x64-windows/lib/girepository-1.0/* aravis-python/aravis/lib/
          ls  aravis-python/aravis/bin/
          ls  aravis-python/aravis/lib/

      - name: Install cibuildwheel
        shell: powershell
        run: python -m pip install cibuildwheel==2.16.4

      - name: Build wheels
        run: |
          cd aravis-python && python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_MACOS: universal2
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: ""
          CIBW_SKIP: "*-win32 *i686 *musllinux*"
          CIBW_BUILD: cp311-*
          CIBW_ENVIRONMENT: ARAVIS_VER={{env.ARAVIS_VER}}

      - name: Test wheel
        shell: cmd
        run: |
          set PATH=${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\bin;%PATH%
          set PKG_CONFIG_PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig\;%PKG_CONFIG_PATH%
          pip install PyGObject
          dir
          dir ${{ github.workspace }}
          dir aravis-python\wheelhouse\
          pip install ${{ github.workspace }}\aravis-python\wheelhouse\aravis_python-${{env.ARAVIS_VER}}-py3-none-win_amd64.whl
          python -c "import aravis"
          
          
