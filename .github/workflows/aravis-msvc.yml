name: Aravis

on:
  push:
    branches:
      - main

env:
  ARAVIS_VER: fe6e314
  PKG_CONFIG_INSTALL: C:\pkg-config
  PKG_CONFIG_VERSION: 0.28-1
  NINJA_INSTALL: C:\ninja

jobs:
  VS2022-Build:
    runs-on: windows-2022
    steps:
      - name: Disable perl
        run: |
          rm -r C:\Strawberry\perl
      
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      
      - name: Setup winget for pkg-config-lite
        uses: Cyberboss/install-winget@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup pkg-config-lite
        run: winget install bloodrock.pkg-config-lite --accept-source-agreements --accept-package-agreements --location ${{env.PKG_CONFIG_INSTALL}} --version ${{env.PKG_CONFIG_VERSION}}
      
      - name: Confirm pkg-config
        id: pkg-config-existence
        uses: andstor/file-existence-action@v3
        with:
          files: ${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin\pkg-config.exe
          fail: true
      
      - name: Setup Meson
        run: |
          pip install meson
      
      - name: Setup Ninja
        uses: ahmedyarub/setup-ninja@master
        with:
          version: 1.11.1
          dest: ${{env.NINJA_INSTALL}}

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      
      - name: Set up MSVC
        uses: ilammy/msvc-dev-cmd@v1
      
      - name: Checkout Aravis
        uses: actions/checkout@v2

      - name: Check for existing cache
        id: cache_status
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
      - name: Install dependencies
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          cd vcpkg && .\bootstrap-vcpkg.bat  && cd ../
 
      - name: Install dependencies
        shell: cmd
        run: |
          vcpkg.exe install --x-install-root ${{ github.workspace }}\vcpkg_installed
      
      - name: Cache dependencies
        if: steps.cache_status.outputs.cache-hit != 'true'
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}

      - name: Build Aravis
        shell: cmd
        run: |
          set CC=clang-cl
          ser CXX=clang-cl
          set PATH=${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\tools\gobject-introspection;%PATH%
          set PATH=${{env.NINJA_INSTALL}};%PATH%
          set PKG_CONFIG_PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig\;%PKG_CONFIG_PATH%
          meson setup --pkg-config-path ${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig -Ddocumentation=disabled -Dusb=enabled -Dviewer=disabled -Dgv-n-buffers=1 -Dprefix=${{ github.workspace }}\install -Dintrospection=enabled build .
          meson compile -C ./build
          meson install -C ./build
      
      - name: List Buildfile
        run: |
          ls build/src
          
      - name: Upload 
        uses: actions/upload-artifact@v4
        with:
          name: aravis-build

          # A file, directory or wildcard pattern that describes what to upload
          # Required.
          path: ${{ github.workspace }}\build
