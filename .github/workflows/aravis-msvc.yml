name: Aravis

on:
  push:
    branches:
      - main

env:
  ARAVIS_VER: fe6e314
  PKG_CONFIG_INSTALL: C:\pkg-config
  PKG_CONFIG_VERSION: 0.28-1
  NINJA_INSTALL: C:\ninja

jobs:
  VS2022-Build:
    runs-on: windows-2019
    steps:
      - name: Disable perl
        run: |
          rm -r C:\Strawberry\perl
      - name: Setup Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: install setuptools
        run: |
          pip uninstall -y setuptools
          pip install setuptools@git+https://github.com/xinyuli1204/setuptools.git
          
      - name: Setup winget for pkg-config-lite
        uses: Cyberboss/install-winget@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup pkg-config-lite
        run: winget install bloodrock.pkg-config-lite --accept-source-agreements --accept-package-agreements --location ${{env.PKG_CONFIG_INSTALL}} --version ${{env.PKG_CONFIG_VERSION}}
      - name: Confirm pkg-config
        id: pkg-config-existence
        uses: andstor/file-existence-action@v3
        with:
          files: ${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin\pkg-config.exe
          fail: true
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2
      - name: Setup Meson
        run: |
          pip install meson
      - name: Setup Ninja
        uses: ahmedyarub/setup-ninja@master
        with:
          version: 1.11.1
          dest: ${{env.NINJA_INSTALL}}
      - name: Checkout vcpkg
        uses: actions/checkout@v3
        with:
          repository: microsoft/vcpkg
          path: vcpkg
      - name: Setup vcpkg
        run: |
          cd vcpkg 
          .\bootstrap-vcpkg.bat
      - name: Checkout Aravis
        uses: actions/checkout@v2
        with:
          # for all commit, tags, and logs
          fetch-depth: 0
      - name: Check for existing cache
        id: cache_status
        uses: actions/cache@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
      - name: Install dependencies
        shell: cmd
        if: steps.cache_status.outputs.cache-hit != 'true'
        run: |
          set PATH=${{ github.workspace }}\vcpkg;%PATH%
          echo %PATH%
          vcpkg.exe install --x-install-root ${{ github.workspace }}\vcpkg_installed
      - name: Cache dependencies
        if: steps.cache_status.outputs.cache-hit != 'true'    
        uses: actions/cache/save@v4
        with:
          path: ${{ github.workspace }}\vcpkg_installed
          key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}
      
      - name: check config 
        run: |
          ls ${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig
          
          
      - name: Build Aravis
        shell: cmd
        run: |
          mkdir install
          dir "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\VC\Auxiliary\Build"
          set PATH=${{env.PKG_CONFIG_INSTALL}}\pkg-config-lite-${{env.PKG_CONFIG_VERSION}}\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\bin;%PATH%
          set PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\tools\gobject-introspection;%PATH%
          set PATH=${{env.NINJA_INSTALL}};%PATH%
          set PKG_CONFIG_PATH=${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig\;%PKG_CONFIG_PATH%
          meson setup --pkg-config-path ${{ github.workspace }}\vcpkg_installed\x64-windows\lib\pkgconfig -Ddocumentation=disabled -Dusb=enabled -Dviewer=disabled -Dgv-n-buffers=1 -Dprefix=${{ github.workspace }}\install -Dintrospection=enabled build .
          meson compile -C ./build
          meson install -C ./build
        
      - name: Create ZIP Archive
        shell: cmd
        run: |
          cd aravis\build
          tar -caf "Aravis-${{ github.ref_name }}".zip "install"

      - name: Release      
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/Aravis-*.zip
